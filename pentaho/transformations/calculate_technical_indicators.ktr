<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>calculate_technical_indicators</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
    </parameters>
    <log>
      <trans-log-table>
        <connection/>
        <schema/>
        <table/>
        <size_limit_lines/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject/>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject/>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject/>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject/>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection/>
        <schema/>
        <table/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2025/10/08 21:58:08.698</created_date>
    <modified_user>-</modified_user>
    <modified_date>2025/10/08 21:58:08.698</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>Calculate Simple Moving Averages</from>
      <to>Calculate Exponential Moving Averages</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Calculate Exponential Moving Averages</from>
      <to>Calculate MACD</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Calculate MACD</from>
      <to>Calculate RSI</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Calculate RSI</from>
      <to>Calculate Bollinger Bands</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Calculate Bollinger Bands</from>
      <to>Select Final Fields</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Select Final Fields</from>
      <to>Write Technical Indicators CSV</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Write Technical Indicators CSV</from>
      <to>Dummy (do nothing)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Read Clean Prices CSV</from>
      <to>Calculate Simple Moving Averages</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <step>
    <name>Calculate Bollinger Bands</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>// Bollinger Bands (20-day SMA ± 2 standard deviations)
if (typeof bb_storage == 'undefined') {
    var bb_storage = {};
}

var stock_key = String(stock_id);

if (!bb_storage[stock_key]) {
    bb_storage[stock_key] = [];
}

bb_storage[stock_key].push(close_price);

var bb_middle = null;
var bb_upper = null;
var bb_lower = null;
var bb_width = null;
var bb_position = null;

if (bb_storage[stock_key].length >= 20) {
    var period = 20;
    var prices_bb = bb_storage[stock_key].slice(-period);
    
    // Calculate SMA (middle band)
    var sum = 0;
    for (var i = 0; i &lt; period; i++) {
        sum += prices_bb[i];
    }
    bb_middle = sum / period;
    
    // Calculate Standard Deviation
    var variance = 0;
    for (var i = 0; i &lt; period; i++) {
        variance += Math.pow(prices_bb[i] - bb_middle, 2);
    }
    var std_dev = Math.sqrt(variance / period);
    
    // Calculate bands
    bb_upper = bb_middle + (2 * std_dev);
    bb_lower = bb_middle - (2 * std_dev);
    bb_width = bb_upper - bb_lower;
    
    // Round values
    bb_middle = Math.round(bb_middle * 10000) / 10000;
    bb_upper = Math.round(bb_upper * 10000) / 10000;
    bb_lower = Math.round(bb_lower * 10000) / 10000;
    bb_width = Math.round(bb_width * 10000) / 10000;
    
    // Position relative to bands
    if (close_price >= bb_upper) {
        bb_position = "ABOVE_UPPER";
    } else if (close_price &lt;= bb_lower) {
        bb_position = "BELOW_LOWER";
    } else {
        bb_position = "WITHIN_BANDS";
    }
}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>bb_middle</name>
        <rename>bb_middle</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>bb_upper</name>
        <rename>bb_upper</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>bb_lower</name>
        <rename>bb_lower</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>bb_width</name>
        <rename>bb_width</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>bb_position</name>
        <rename>bb_position</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1008</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Calculate Exponential Moving Averages</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>// Initialize EMA storage
if (typeof ema_storage == 'undefined') {
    var ema_storage = {};
}

var stock_key = String(stock_id);

// Initialize for this stock
if (!ema_storage[stock_key]) {
    ema_storage[stock_key] = {
        ema_12_prev: null,
        ema_26_prev: null,
        prices: []
    };
}

// Add current price
ema_storage[stock_key].prices.push(close_price);
var prices = ema_storage[stock_key].prices;

// Function to calculate EMA
function calculateEMA(prices, period, prevEMA) {
    if (prices.length &lt; period) {
        return null;
    }
    
    var multiplier = 2 / (period + 1);
    
    // If no previous EMA, use SMA as starting point
    if (prevEMA == null) {
        var sum = 0;
        for (var i = 0; i &lt; period; i++) {
            sum += prices[prices.length - period + i];
        }
        return sum / period;
    }
    
    // Calculate EMA: (Close - EMA_prev) × multiplier + EMA_prev
    var currentPrice = prices[prices.length - 1];
    return (currentPrice - prevEMA) * multiplier + prevEMA;
}

// Calculate EMA 12 and 26
var ema_12 = calculateEMA(prices, 12, ema_storage[stock_key].ema_12_prev);
var ema_26 = calculateEMA(prices, 26, ema_storage[stock_key].ema_26_prev);

// Store for next iteration
if (ema_12 != null) {
    ema_storage[stock_key].ema_12_prev = ema_12;
    ema_12 = Math.round(ema_12 * 10000) / 10000;
}

if (ema_26 != null) {
    ema_storage[stock_key].ema_26_prev = ema_26;
    ema_26 = Math.round(ema_26 * 10000) / 10000;
}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>ema_12</name>
        <rename>ema_12</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>ema_26</name>
        <rename>ema_26</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>448</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Calculate MACD</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>// MACD = EMA_12 - EMA_26
var macd_line = null;
if (ema_12 != null &amp;&amp; ema_26 != null) {
    macd_line = ema_12 - ema_26;
    macd_line = Math.round(macd_line * 10000) / 10000;
}

// Initialize MACD signal storage
if (typeof macd_storage == 'undefined') {
    var macd_storage = {};
}

var stock_key = String(stock_id);

if (!macd_storage[stock_key]) {
    macd_storage[stock_key] = {
        macd_values: [],
        signal_prev: null
    };
}

// Store MACD value
if (macd_line != null) {
    macd_storage[stock_key].macd_values.push(macd_line);
}

// Calculate Signal Line (EMA 9 of MACD)
var macd_signal = null;
var macd_values = macd_storage[stock_key].macd_values;

if (macd_values.length >= 9) {
    var multiplier = 2 / 10; // 9 + 1
    
    if (macd_storage[stock_key].signal_prev == null) {
        // First signal: SMA of first 9 MACD values
        var sum = 0;
        for (var i = 0; i &lt; 9; i++) {
            sum += macd_values[macd_values.length - 9 + i];
        }
        macd_signal = sum / 9;
    } else {
        // EMA calculation
        macd_signal = (macd_line - macd_storage[stock_key].signal_prev) * multiplier + macd_storage[stock_key].signal_prev;
    }
    
    macd_storage[stock_key].signal_prev = macd_signal;
    macd_signal = Math.round(macd_signal * 10000) / 10000;
}

// Calculate Histogram
var macd_histogram = null;
if (macd_line != null &amp;&amp; macd_signal != null) {
    macd_histogram = macd_line - macd_signal;
    macd_histogram = Math.round(macd_histogram * 10000) / 10000;
}

// MACD Signal interpretation
var macd_signal_interpretation = null;
if (macd_line != null &amp;&amp; macd_signal != null) {
    if (macd_line > macd_signal) {
        macd_signal_interpretation = "BULLISH";
    } else if (macd_line &lt; macd_signal) {
        macd_signal_interpretation = "BEARISH";
    }
}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>macd_line</name>
        <rename>macd_line</rename>
        <type>Number</type>
        <length>16</length>
        <precision>2</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>macd_signal</name>
        <rename>macd_signal</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>macd_histogram</name>
        <rename>macd_histogram</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>macd_signal_interpretation</name>
        <rename>macd_signal_interpretation</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>672</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Calculate RSI</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>// RSI Calculation (Relative Strength Index)
if (typeof rsi_storage == 'undefined') {
    var rsi_storage = {};
}

var stock_key = String(stock_id);

if (!rsi_storage[stock_key]) {
    rsi_storage[stock_key] = {
        prices: [],
        avg_gain: null,
        avg_loss: null
    };
}

// Store prices
rsi_storage[stock_key].prices.push(close_price);
var prices = rsi_storage[stock_key].prices;

var rsi = null;
var rsi_signal = null;

// Need at least 15 prices (14 periods + 1)
if (prices.length >= 15) {
    var period = 14;
    
    if (rsi_storage[stock_key].avg_gain == null) {
        // First RSI calculation
        var gains = 0;
        var losses = 0;
        
        for (var i = prices.length - period; i &lt; prices.length; i++) {
            var change = prices[i] - prices[i - 1];
            if (change > 0) {
                gains += change;
            } else {
                losses += Math.abs(change);
            }
        }
        
        rsi_storage[stock_key].avg_gain = gains / period;
        rsi_storage[stock_key].avg_loss = losses / period;
    } else {
        // Smoothed RSI
        var change = prices[prices.length - 1] - prices[prices.length - 2];
        var gain = change > 0 ? change : 0;
        var loss = change &lt; 0 ? Math.abs(change) : 0;
        
        rsi_storage[stock_key].avg_gain = (rsi_storage[stock_key].avg_gain * (period - 1) + gain) / period;
        rsi_storage[stock_key].avg_loss = (rsi_storage[stock_key].avg_loss * (period - 1) + loss) / period;
    }
    
    // Calculate RSI
    if (rsi_storage[stock_key].avg_loss == 0) {
        rsi = 100;
    } else {
        var rs = rsi_storage[stock_key].avg_gain / rsi_storage[stock_key].avg_loss;
        rsi = 100 - (100 / (1 + rs));
    }
    
    rsi = Math.round(rsi * 100) / 100;
    
    // RSI Signal interpretation
    if (rsi >= 70) {
        rsi_signal = "OVERBOUGHT";
    } else if (rsi &lt;= 30) {
        rsi_signal = "OVERSOLD";
    } else {
        rsi_signal = "NEUTRAL";
    }
}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>rsi</name>
        <rename>rsi</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>rsi_signal</name>
        <rename>rsi_signal</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>832</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Calculate Simple Moving Averages</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>// Initialize arrays to store prices per stock
if (typeof sma_arrays == 'undefined') {
    var sma_arrays = {};
}

// Get stock identifier
var stock_key = String(stock_id);

// Initialize array for this stock if doesn't exist
if (!sma_arrays[stock_key]) {
    sma_arrays[stock_key] = [];
}

// Add current close price to array
sma_arrays[stock_key].push(close_price);

// Function to calculate SMA
function calculateSMA(arr, period) {
    if (arr.length &lt; period) {
        return null;
    }
    var sum = 0;
    for (var i = arr.length - period; i &lt; arr.length; i++) {
        sum += arr[i];
    }
    return sum / period;
}

// Calculate SMAs for different periods
var sma_10 = calculateSMA(sma_arrays[stock_key], 10);
var sma_20 = calculateSMA(sma_arrays[stock_key], 20);
var sma_50 = calculateSMA(sma_arrays[stock_key], 50);
var sma_200 = calculateSMA(sma_arrays[stock_key], 200);

// Round to 4 decimals
if (sma_10 != null) sma_10 = Math.round(sma_10 * 10000) / 10000;
if (sma_20 != null) sma_20 = Math.round(sma_20 * 10000) / 10000;
if (sma_50 != null) sma_50 = Math.round(sma_50 * 10000) / 10000;
if (sma_200 != null) sma_200 = Math.round(sma_200 * 10000) / 10000;

// Check for trend signals
var trend_signal = null;
if (sma_10 != null &amp;&amp; sma_50 != null) {
    if (sma_10 > sma_50) {
        trend_signal = "BULLISH";
    } else if (sma_10 &lt; sma_50) {
        trend_signal = "BEARISH";
    } else {
        trend_signal = "NEUTRAL";
    }
}

// Golden Cross / Death Cross detection
var cross_signal = null;
if (sma_50 != null &amp;&amp; sma_200 != null) {
    if (sma_50 > sma_200) {
        cross_signal = "GOLDEN_CROSS";
    } else if (sma_50 &lt; sma_200) {
        cross_signal = "DEATH_CROSS";
    }
}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>sma_10</name>
        <rename>sma_10</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>sma_20</name>
        <rename>sma_20</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>sma_50</name>
        <rename>sma_50</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>sma_200</name>
        <rename>sma_200</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>trend_signal</name>
        <rename>trend_signal</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>cross_signal</name>
        <rename>cross_signal</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>192</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Dummy (do nothing)</name>
    <type>Dummy</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>592</xloc>
      <yloc>368</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Read Clean Prices CSV</name>
    <type>CsvInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <filename>C:\Users\gabri\Documents\Estudos\isi\etl_stocks\pentaho\data\temp_data\clean_prices.csv</filename>
    <filename_field/>
    <rownum_field/>
    <include_filename>N</include_filename>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <header>Y</header>
    <buffer_size>50000</buffer_size>
    <lazy_conversion>Y</lazy_conversion>
    <add_filename_result>N</add_filename_result>
    <parallel>N</parallel>
    <newline_possible>N</newline_possible>
    <format>mixed</format>
    <encoding/>
    <fields>
      <field>
        <name>stock_id</name>
        <type>Integer</type>
        <format>#</format>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <length>15</length>
        <precision>0</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>symbol</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <length>10</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>price_date</name>
        <type>Date</type>
        <format>yyyy-MM-dd</format>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>open_price</name>
        <type>Number</type>
        <format>#.###</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>7</length>
        <precision>3</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>high_price</name>
        <type>Number</type>
        <format>#.####</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>8</length>
        <precision>4</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>low_price</name>
        <type>Number</type>
        <format>#.####</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>8</length>
        <precision>4</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>close_price</name>
        <type>Number</type>
        <format>#.##</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>6</length>
        <precision>2</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>volume</name>
        <type>Integer</type>
        <format>#</format>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <length>15</length>
        <precision>0</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>price_change</name>
        <type>Number</type>
        <format>#</format>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <length>15</length>
        <precision>0</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>price_change_pct</name>
        <type>Number</type>
        <format>#</format>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <length>15</length>
        <precision>0</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>daily_return</name>
        <type>Number</type>
        <format>#</format>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <length>15</length>
        <precision>0</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>extraction_timestamp</name>
        <type>Date</type>
        <format>yyyy/MM/dd HH:mm:ss.SSS</format>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>192</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Select Final Fields</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>stock_id</name>
      </field>
      <field>
        <name>symbol</name>
      </field>
      <field>
        <name>price_date</name>
      </field>
      <field>
        <name>open_price</name>
      </field>
      <field>
        <name>high_price</name>
      </field>
      <field>
        <name>low_price</name>
      </field>
      <field>
        <name>close_price</name>
      </field>
      <field>
        <name>volume</name>
      </field>
      <field>
        <name>price_change</name>
      </field>
      <field>
        <name>price_change_pct</name>
      </field>
      <field>
        <name>daily_return</name>
      </field>
      <field>
        <name>extraction_timestamp</name>
      </field>
      <field>
        <name>sma_10</name>
      </field>
      <field>
        <name>sma_20</name>
      </field>
      <field>
        <name>sma_50</name>
      </field>
      <field>
        <name>sma_200</name>
      </field>
      <field>
        <name>trend_signal</name>
      </field>
      <field>
        <name>cross_signal</name>
      </field>
      <field>
        <name>ema_12</name>
      </field>
      <field>
        <name>ema_26</name>
      </field>
      <field>
        <name>macd_line</name>
      </field>
      <field>
        <name>macd_signal</name>
      </field>
      <field>
        <name>macd_histogram</name>
      </field>
      <field>
        <name>macd_signal_interpretation</name>
      </field>
      <field>
        <name>rsi</name>
      </field>
      <field>
        <name>rsi_signal</name>
      </field>
      <field>
        <name>bb_middle</name>
      </field>
      <field>
        <name>bb_upper</name>
      </field>
      <field>
        <name>bb_lower</name>
      </field>
      <field>
        <name>bb_width</name>
      </field>
      <field>
        <name>bb_position</name>
      </field>
      <select_unspecified>N</select_unspecified>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>192</xloc>
      <yloc>368</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Write Technical Indicators CSV</name>
    <type>TextFileOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding>windows-1252</encoding>
    <endedLine/>
    <fileNameInField>N</fileNameInField>
    <fileNameField/>
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>C:\Users\gabri\Documents\Estudos\isi\etl_stocks\pentaho\data\temp_data\technical_indicators</name>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery/>
    </file>
    <fields>
      <field>
        <name>stock_id</name>
        <type>Integer</type>
        <format>#</format>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>15</length>
        <precision>0</precision>
      </field>
      <field>
        <name>symbol</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>10</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>price_date</name>
        <type>Date</type>
        <format>yyyy-MM-dd</format>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>open_price</name>
        <type>Number</type>
        <format>#.####</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>7</length>
        <precision>3</precision>
      </field>
      <field>
        <name>high_price</name>
        <type>Number</type>
        <format>#.####</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>8</length>
        <precision>4</precision>
      </field>
      <field>
        <name>low_price</name>
        <type>Number</type>
        <format>#.####</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>8</length>
        <precision>4</precision>
      </field>
      <field>
        <name>close_price</name>
        <type>Number</type>
        <format>#.####</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>6</length>
        <precision>2</precision>
      </field>
      <field>
        <name>volume</name>
        <type>Integer</type>
        <format>#</format>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>15</length>
        <precision>0</precision>
      </field>
      <field>
        <name>price_change</name>
        <type>Number</type>
        <format>#.####</format>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>15</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>price_change_pct</name>
        <type>Number</type>
        <format>#.####</format>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>15</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>daily_return</name>
        <type>Number</type>
        <format>#.####</format>
        <currency>$</currency>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>15</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>extraction_timestamp</name>
        <type>Date</type>
        <format>yyyy/MM/dd HH:mm:ss.SSS</format>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sma_10</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sma_20</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sma_50</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sma_200</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>trend_signal</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>cross_signal</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>ema_12</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>ema_26</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>macd_line</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>16</length>
        <precision>2</precision>
      </field>
      <field>
        <name>macd_signal</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>macd_histogram</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>macd_signal_interpretation</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>rsi</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>rsi_signal</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>bb_middle</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>bb_upper</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>bb_lower</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>bb_width</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency/>
        <decimal>,</decimal>
        <group>.</group>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>bb_position</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>384</xloc>
      <yloc>368</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
  <attributes/>
</transformation>
